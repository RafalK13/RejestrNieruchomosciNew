// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RejestrNieruchomosciNew;

namespace RejestrNieruchomosciNew.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191016103220_wladanie1")]
    partial class wladanie1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RejestrNieruchomosciNew.Dzialka", b =>
                {
                    b.Property<int>("DzialkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kwakt");

                    b.Property<string>("Kwzrob");

                    b.Property<string>("Numer");

                    b.Property<int>("ObrebId");

                    b.Property<decimal?>("Pow");

                    b.Property<int?>("WladanieId");

                    b.HasKey("DzialkaId");

                    b.HasIndex("ObrebId");

                    b.HasIndex("WladanieId");

                    b.HasIndex("Numer", "ObrebId")
                        .IsUnique()
                        .HasFilter("[Numer] IS NOT NULL");

                    b.ToTable("Dzialka");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.DzielnicaSlo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.HasKey("Id");

                    b.ToTable("DzielnicaSlo");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.FormaWladaniaSlo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.Property<int?>("WladanieId");

                    b.HasKey("Id");

                    b.HasIndex("WladanieId");

                    b.ToTable("FormaWladaniaSlo");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.GminaSlo", b =>
                {
                    b.Property<int>("GminaSloId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.HasKey("GminaSloId");

                    b.ToTable("GminaSlo");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.InnePrawa", b =>
                {
                    b.Property<int>("InnePrawaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataDokumentuNab");

                    b.Property<DateTime?>("DataDokumentuZb");

                    b.Property<DateTime?>("DataObowiazywaniaDo");

                    b.Property<DateTime?>("DataObowiazywaniaOd");

                    b.Property<DateTime?>("DataWpisuKwnab");

                    b.Property<DateTime?>("DataWpisuKwzb");

                    b.Property<DateTime?>("DecyzjaData");

                    b.Property<string>("DecyzjaNr");

                    b.Property<int?>("DecyzjaOrganId");

                    b.Property<string>("DecyzjaPrzedmiot");

                    b.Property<DateTime?>("DoPrzekazania");

                    b.Property<DateTime?>("DoZwrotnegoPrzekazania");

                    b.Property<int>("DzialkaId");

                    b.Property<int?>("NazwaCzynnosciNabId");

                    b.Property<int?>("NazwaCzynnosciZbId");

                    b.Property<string>("NrDokumentuNab");

                    b.Property<string>("NrDokumentuZb");

                    b.Property<int?>("Okres");

                    b.Property<int>("PodmiotId");

                    b.Property<int?>("PrzedstawicielId");

                    b.Property<int?>("RodzajDokumentuNabId");

                    b.Property<int?>("RodzajDokumentuZbId");

                    b.Property<int?>("Stawka");

                    b.Property<string>("TytulDokumentuNab");

                    b.Property<string>("TytulDokumentuZb");

                    b.Property<decimal?>("Wartosc");

                    b.Property<string>("WarunkiRealizacji");

                    b.HasKey("InnePrawaId");

                    b.HasIndex("DzialkaId");

                    b.ToTable("InnePrawa");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.NazwaCzynnosciSlo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.Property<int?>("WladanieId");

                    b.HasKey("Id");

                    b.HasIndex("WladanieId");

                    b.ToTable("NazwaCzynnosciSlo");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Obreb", b =>
                {
                    b.Property<int>("ObrebId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GminaSloId");

                    b.Property<string>("Nazwa");

                    b.HasKey("ObrebId");

                    b.HasIndex("GminaSloId");

                    b.ToTable("Obreb");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.PlatnoscUw", b =>
                {
                    b.Property<int>("PlatnoscUwId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Okres");

                    b.Property<double?>("Stawka");

                    b.Property<double?>("Wartosc");

                    b.Property<int?>("WladanieId");

                    b.HasKey("PlatnoscUwId");

                    b.HasIndex("WladanieId");

                    b.ToTable("PlatnoscUw");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Podmiot", b =>
                {
                    b.Property<int>("PodmiotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("House");

                    b.Property<string>("Kontakt");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("PostCode");

                    b.Property<string>("Street");

                    b.Property<string>("TaxNumber");

                    b.Property<string>("URL");

                    b.Property<int?>("WladanieId");

                    b.HasKey("PodmiotId");

                    b.HasIndex("WladanieId");

                    b.ToTable("Podmiot");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.RodzajDokumentuSlo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.Property<int?>("WladanieId");

                    b.HasKey("Id");

                    b.HasIndex("WladanieId");

                    b.ToTable("RodzajDokumentuSlo");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Wladanie", b =>
                {
                    b.Property<int>("WladanieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataDokumentu");

                    b.Property<DateTime?>("DataObowiazywaniaDo");

                    b.Property<DateTime?>("DataObowiazywaniaOd");

                    b.Property<int>("DzialkaId");

                    b.Property<int?>("FormaWladaniaId");

                    b.Property<int?>("NazwaCzynnosciId");

                    b.Property<int?>("Okres");

                    b.Property<int?>("PlatnoscUwId");

                    b.Property<int>("PodmiodId");

                    b.Property<int?>("RodzajDokumentuId");

                    b.Property<int?>("Stawka");

                    b.Property<string>("TytulDokumentu");

                    b.Property<string>("Udzial");

                    b.Property<decimal?>("Wartosc");

                    b.HasKey("WladanieId");

                    b.ToTable("Wladanie");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Dzialka", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Obreb", "Obreb")
                        .WithMany("Dzialka")
                        .HasForeignKey("ObrebId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("Dzialka")
                        .HasForeignKey("WladanieId");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.FormaWladaniaSlo", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("FormaWladaniaSlo")
                        .HasForeignKey("WladanieId");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.InnePrawa", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Dzialka", "Dzialka")
                        .WithMany()
                        .HasForeignKey("DzialkaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.NazwaCzynnosciSlo", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("NazwaCzynnosciSlo")
                        .HasForeignKey("WladanieId");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Obreb", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.GminaSlo", "GminaSlo")
                        .WithMany("Obreb")
                        .HasForeignKey("GminaSloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.PlatnoscUw", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("PlatnoscUw")
                        .HasForeignKey("WladanieId");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.Podmiot", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("Podmiot")
                        .HasForeignKey("WladanieId");
                });

            modelBuilder.Entity("RejestrNieruchomosciNew.RodzajDokumentuSlo", b =>
                {
                    b.HasOne("RejestrNieruchomosciNew.Wladanie", "Wladanie")
                        .WithMany("RodzajDokumentuSlo")
                        .HasForeignKey("WladanieId");
                });
#pragma warning restore 612, 618
        }
    }
}
